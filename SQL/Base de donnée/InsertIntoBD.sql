INSERT INTO COPYRIGHTS (IDCOPYRIGHT,COPYRIGHT)
SELECT DISTINCT idCopyright, Copyright
FROM TEMP_ALBUMS
ORDER BY IDCOPYRIGHT;

--SELECT * FROM Copyrights;

INSERT INTO ARTISTS
SELECT DISTINCT IDARTIST, NAME, POPULARITY,0
FROM TEMP_ARTISTS
ORDER BY NAME;

--SELECT * FROM Artists

INSERT INTO CATEGORY
SELECT DISTINCT NAMECATEGORY
FROM TEMP_ARTISTS
WHERE NAMECATEGORY IS NOT NULL
ORDER BY NAMECATEGORY;

--SELECT * FROM Category

INSERT INTO GENRE
SELECT DISTINCT nameGenre
FROM TEMP_ARTISTS
WHERE nameGenre IS NOT NULL
ORDER BY NAMEGENRE;

--SELECT * FROM Genre

INSERT INTO Award
    SELECT DISTINCT NAMEAWARD
    FROM TEMP_ARTISTS
    WHERE NAMEAWARD IS NOT NULL;

--SELECT * FROM Award

INSERT INTO TypeOfAlbum
    SELECT DISTINCT NAMETYPE
    FROM TEMP_ALBUMS
    WHERE NAMETYPE IS NOT NULL;

--SELECT * FROM TypeOfAlbum

INSERT INTO TypeOfPlaylist
    SELECT DISTINCT TYPE
    FROM TEMP_PLAYLIST
    WHERE TYPE IS NOT NULL;

--SELECT * FROM TypeOfPlaylist

INSERT INTO Gender
    SELECT DISTINCT GENDERNAME
    FROM TEMP_USERS
    WHERE GENDERNAME IS NOT NULL;

--SELECT * FROM Gender

INSERT INTO Albums (IDALBUM, NAME, LABEL, YEAROFRELEASE, TOTAL_TRACKS, NAMETYPE)
    SELECT DISTINCT IDALBUM, NAME, LABEL, YEAROFRELEASE, 0, NAMETYPE
    FROM TEMP_ALBUMS
    ORDER BY NAME;

--SELECT * FROM Albums

INSERT INTO Tracks
    SELECT DISTINCT idtrack, name, popularity, danceability, energy, keysignature, loudness,
                    "MODE", speechiness, acoustiness, instrumentalness, liveness, valence, tempo, durationms, idalbum
    FROM TEMP_TRACKS
    ORDER BY name;

--SELECT * FROM Tracks

INSERT INTO Users
    SELECT DISTINCT iduser, pseudo, dateofbirth, timeplaying, gendername, idcurrenttrack
    FROM TEMP_USERS
    ORDER BY idUser;

--SELECT * FROM Users

INSERT INTO Playlists (iduser, name, nametype, nameelementparent)
    SELECT IDUSER, NAME, TYPE, NAMEPARENTELEMENT
    FROM TEMP_PLAYLIST
    GROUP BY IDUSER, NAME, TYPE, NAMEPARENTELEMENT
    ORDER BY IDUSER;

UPDATE PLAYLISTS
SET NAMETYPEPARENT = 'Folder'
WHERE NAMEELEMENTPARENT IS NOT NULL;

--SELECT * FROM Playlists

INSERT INTO UserPremium
    SELECT DISTINCT IDUSER, name, surname
    FROM TEMP_USERS
    WHERE name IS NOT NULL
    ORDER BY IDUSER;

--SELECT * FROM UserPremium

INSERT INTO Follows
    SELECT IDARTISTFOLLOW, IDUSER
    FROM TEMP_USERS
    WHERE IDARTISTFOLLOW IS NOT NULL
    GROUP BY IDARTISTFOLLOW, IDUSER
    ORDER BY idUser;

--SELECT * FROM Follows

INSERT INTO ProducedBy
    SELECT IDALBUM, IDARTIST
    FROM TEMP_ALBUMS
    GROUP BY IDALBUM, IDARTIST;

--SELECT * FROM ProducedBy

INSERT INTO OwnedBy
    SELECT IDALBUM, IDCOPYRIGHT
    FROM TEMP_ALBUMS
    GROUP BY IDALBUM, IDCOPYRIGHT
    ORDER BY IDCOPYRIGHT;

--SELECT * FROM OwnedBy

INSERT INTO Evaluations
    SELECT idUser, idTrack, note
    FROM TEMP_EVALUATION
    GROUP BY idUser, idTrack, note
    ORDER BY IDUSER;



--SELECT * FROM Evaluations

INSERT INTO LikedBy
    SELECT idUser, IDTRACK, DATELIKE
    FROM TEMP_LIKES
    ORDER BY IDUSER;

--SELECT * FROM LikedBy


INSERT INTO PlaylistContent
    SELECT IDTRACK, "ORDER", IDUSER, NAME, TYPE
    FROM TEMP_PLAYLIST
    WHERE idTrack IS NOT NULL
    ORDER BY IDUSER;

--SELECT * FROM PlaylistContent


INSERT INTO ShareTrack
SELECT IDTRACK, IDUSERSHARE, IDUSER
    FROM TEMP_SHARE
    ORDER BY IDUSER;

--SELECT * FROM ShareTrack


INSERT INTO Blocked
    SELECT IDUSERBLOCKED, IDUSERPREMIUM
    FROM TEMP_USERS_BLOCKED
    ORDER BY IDUSERPREMIUM;

--SELECT * FROM Blocked

INSERT INTO GenreArtist
    SELECT IDARTIST, NAMEGENRE
    FROM TEMP_ARTISTS
    WHERE nameGenre IS NOT NULL
    GROUP BY IDARTIST, NAMEGENRE
    ORDER BY NAMEGENRE;

--SELECT * FROM GenreArtist

INSERT INTO AwardArtist
    SELECT IDARTIST, NAMECATEGORY, NAMEAWARD, ARTISTYEAR
    FROM TEMP_ARTISTS
    WHERE NAMECATEGORY IS NOT NULL
    GROUP BY IDARTIST, NAMECATEGORY, NAMEAWARD, ARTISTYEAR
    ORDER BY NAMECATEGORY;

--SELECT * FROM AwardArtist

INSERT INTO Friends
    SELECT IDUSERPREMIUM, IDUSERFRIEND
    FROM TEMP_FRIENDS
    ORDER BY IDUSERPREMIUM;

--SELECT * FROM Friends

INSERT INTO ListeningDate
    SELECT IDUSER, IDTRACK, DATELISTEN
    FROM TEMP_TRACKS
    WHERE idUser IS NOT NULL
    GROUP BY IDUSER, IDTRACK, DATELISTEN
    ORDER BY IDUSER;

--SELECT * FROM ListeningDate
commit;